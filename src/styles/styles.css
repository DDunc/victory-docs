/**
* BASE
* Foundational styles
*
* normalize:   reset the browsers
* variables:   site-wide variables such as fonts, colors, widths, etc.
* base:        styles are applied directly to element using an element selector
* utilities:   styles that are not reflective of the application state
* links:       universal link and link modifiers
* text:        universal text and content styles
*
*/
@import "../../node_modules/normalize.css";
@import "./base/variables.css";
@import "./base/base.css";
@import "./base/links.css";
@import "./base/text.css";

/**
* COMPONENTS
* Discrete components of the page: such as navigation, alert dialogs, buttons, etc.
* Any new feature or component will be added to this section.
*
* article:      .Article is the content-only portion of /docs/*, nested in .Page-content
* button:       .btn classes for <button> elements
* gallery:      Styles for /gallery/*
* home:         All styles on the front page/lander
* input:        <input /> styles
* markdown:     <Markdown /> styles
* page:         <Page /> styles, including the internal pages and their links
* playground:   <Playground /> styles and CodeMirror theme
* prism:        color theme for prism syntax highlighting (third-party)
* recipe:       Styles for the /recipes/*
* showcase:     <ShowcaseApp /> styles to style screenshot images
* sidebar:      <Sidebar /> styles, including the .Nav classes
* content-and-sidebar: docs page with sidebar controller + component styles
*
*/
@import "./components/article.css";
@import "./components/button.css";
@import "./components/footer.css";
@import "./components/gallery.css";
@import "./components/header.css";
@import "./components/home.css";
@import "./components/input.css";
@import "./components/markdown.css";
@import "./components/page.css";
@import "./components/playground.css";
@import "./components/prism.css";
@import "./components/recipe.css";
@import "./components/showcase.css";
@import "./components/sidebar.css";

/**
* LAYOUT
* Determine how sections of the page are structured
*
* grid:   global Layout and Structure
*
*/
@import "./layout/grid.css";

/**
* STATES
* Augment and override all other styles, such as whether an element
* is expanded or collapsed, or if the element is in an error or active state
*
*/

/* Utilities must always be last, so that they can override the above */
@import "./base/utilities.css";

.fancyBorder,
.Markdown img {
  border-left: 4px solid var(--sand);
  border-top: 4px solid var(--sand);
  box-shadow:
    0 0 0 1px var(--sand),
    0 0 0 5px var(--lighterSand),
    0 0 0 6px var(--sand),
    -1px 11px 0 0 var(--sand),
    11px 11px 0 0 var(--sand),
    11px -1px 0 0 var(--sand);
}
